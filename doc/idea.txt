PBI-07: 楽曲検索機能のアイディア提案
===========================================

## 基本的な検索機能

### 1. 検索バー配置
- ヘッダー部分（テーマボタンとログアウトボタンの間）
- プレイリスト一覧の上部
- 検索アイコン + 検索ボックス

### 2. 検索対象
- 楽曲名（Track Name）
- アーティスト名（Artist）
- アルバム名（Album）
- プレイリスト名

## 高度な検索機能

### 3. フィルタリング
- 検索範囲選択（全プレイリスト vs 現在表示中のプレイリストのみ）
- 検索対象選択（楽曲名のみ、アーティスト名のみ、など）
- 再生時間での絞り込み

### 4. 検索結果表示
- 専用の検索結果ビュー
- 元のプレイリスト情報も表示（どのプレイリストの楽曲か）
- 検索結果からの直接削除機能

## UX向上機能

### 5. リアルタイム検索
- 入力中の増分検索（インクリメンタルサーチ）
- 検索履歴機能
- オートコンプリート（よく検索されるアーティスト名など）

### 6. 検索結果のハイライト
- マッチした部分の強調表示
- 検索条件クリア機能

## 実装の優先順位提案

### Phase 1（最小実装）
- 基本的な楽曲名・アーティスト名検索
- シンプルな検索ボックス配置
- 現在のTreeViewでの絞り込み表示

### Phase 2
- 検索結果の専用表示ビュー
- 元のプレイリスト情報表示
- 検索条件クリア機能

### Phase 3
- フィルタリング機能追加
- リアルタイム検索
- 検索履歴機能

## 技術実装案

### UI配置
- MainView.xamlのヘッダー部分に検索ボックス追加
- 検索アイコン（🔍）+ TextBox + クリアボタン（×）

### データフィルタリング
- MainViewModelに検索文字列プロパティ追加
- PlaylistViewModelとTrackViewModelにフィルタリング機能追加
- CollectionViewSourceでの動的フィルタリング

### 検索ロジック
- 大文字小文字を区別しない部分一致検索
- 複数キーワード対応（スペース区切り）
- 日本語・英語両対応

### パフォーマンス考慮
- 検索実行のデバウンス処理（300ms程度）
- 大量データでの検索最適化
- UI仮想化との組み合わせ

## 将来拡張案

### Spotify Web API活用
- Spotify本体の検索APIとの連携
- 新しい楽曲の検索・追加機能
- おすすめ楽曲の表示

### 高度な検索条件
- ジャンル検索
- 楽曲の長さ範囲指定
- リリース年での絞り込み
- BPM（テンポ）での検索

### 検索結果の活用
- 検索結果からのプレイリスト作成
- 重複楽曲の検出・統合
- 楽曲の統計情報表示

===========================================
作成日: 2025年6月15日
対象: PBI-07 楽曲検索機能
バージョン: v1.0